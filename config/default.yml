---

##############################
### デフォルト設定ファイル ###
##############################


###### 注意事項 ######
# * "デフォルトの設定" とは，STLデザイナー2が実行最初に初期化処理をするときに，最初に設定される値です．
#   すなわち，STLデザイナー2をコンフィグファイル無しで実行すると， "デフォルト設定" で動作します．
#   次に，コンフィグファイルを指定して実行すると，コンフィグファイル読み込み時に "デフォルト設定" を上書きします．
#   なお，このファイルに書かれているのは "デフォルト設定" であるため，実行時にこのファイルを指定した時と，コンフィグを指定しなかった時と同じ動作となります．
#
# * 数値の単位は以下の形式のいずれにも対応しています．
#   1. 通常入力（例： 0.001）
#   2. SPICE方式（例： 1m）
#   3. 指数表記（例： 1.0e-3）
#
# * パスは実行パス（stldesigner2/直下，runファイルがある場所）からの相対パスで記述してください．
#   フォルダの区切り文字は / を使ってください．
#
# * 数値を文字列として扱いたい場合は "" で囲ってください．
#
# * YAML形式（このファイルの形式）は空白やインデント揃えにも，見やすさだけでなく文法的な意味があるため，注意してください．
#   : や - にも文法的な意味があります．
#
# * 行中に # があると，同じ行のそれ以降の文字はコメントとなります．
#####################


### 出力ディレクトリ ###
outdir: ./output

### STL設計に用いるテンプレートファイルのパス ###
template: ./template/default.sp

### 母集合の個体数 ###
pop_size: 2

### 遺伝的アルゴリズムの繰り返し世代数 ###
generation: 2

### 一回の交叉で生成する子供の数（兄弟の数） ###
brother_num: 2

### ブレンド交叉で用いる定数 ###
blx_alpha: 0.366

### 交叉メソッド ###
# 選択肢は以下の通り
# length:
#  - dependent_sum_blx => セグメント長用のブレンド交叉
#  - dependent_sum_blx_old => STLデザイナー1で使用したブレンド交叉の実装
#  - dependen_sum_blx_obsolete => STLデザイナー2 の ver. 2.0 ～ 2.2 までで使用していたブレンド交叉
# impedance:
#  - independent_blx => 通常のブレンド交叉
#  - n_point_crossover => n点交叉（n = 1），n の数を変えるにはソースコードの変更が伴います．
crossover:
  length: dependent_sum_blx
  impedance: independent_blx

### セグメントの特性インピーダンスの最小値 ###
# 自然数で指定してください．
minimum_impedance: 40

### セグメントの特性インピーダンスの最大値 ###
# 自然数で指定してください．
maximum_impedance: 120

### セグメントの特性インピーダンスの間隔 ###
# 自然数で指定してください．
impedance_step: 5

### セグメント長の最小値 ###
minimum_length: 1m

### セグメント長の間隔 ###
# minimum_length を割り切れる値でなければなりません．
length_step: 0.5m

### TエレメントSTLの特性インピーダンス候補 ###
# TエレメントによるSTL設計の場合はこのリストを使用します．
imptype:
  40: 6.407e-09
  45: 6.355e-09
  50: 6.308e-09
  55: 6.266e-09
  60: 6.226e-09
  65: 6.188e-09
  70: 6.156e-09
  75: 6.125e-09
  80: 6.099e-09
  85: 6.075e-09
  90: 6.055e-09
  95: 6.034e-09
  100: 6.015e-09
  105: 5.999e-09
  110: 5.98e-09
  115: 5.965e-09
  120: 5.954e-09

### 乱数シード ###
# 複数設定すると，設定された順に続けて実行されます．
seeds:
- 1
- 2

### 最適化アルゴリズム ###
# 選択肢は以下の通り．（ver 2.3 では ga のみです．）
# optimization:
#  - ga => 遺伝的アルゴリズムによる設計
optimization: ga

### tlsim 過渡解析設定 ###
# spice_name が tlsim のとき、過渡解析を設定します。
# ※現在、開始時刻の設定方法が不明なため、設定しても機能しません。
# [step, stop_time, start_time]
# tlsim_tran:
# - 0.0
# - 0.0
# - 0.0

### 回路シミュレータ名 ###
# 選択肢は以下の通り．
# spice_name:
#  - hspice => synopsis社の HSPICE
#  - tlsim => Cadence社の OrCAD 付属，回路シミュレータ
#  - dbgspice => 波形評価を行わず，スコアを乱数で設定するデバッグモード
spice_name: hspice

### 最適化する観測点 ###
# テンプレートの観測点のうち，波形整形したい観測点を指定してください．
optpts:
- optpt1
- optpt2

### 観測点毎の重み ###
# 値が大きいほど，重点的に評価されます．
weight:
  optpt1: 1.0
  optpt2: 1.0

### 観測波形に対応する理想波形の観測点 ###
# optpt に対する理想波形をテンプレートで設定し，観測点を指定してください．
versus:
  optpt1: vspt1
  optpt2: vspt2

### STLのノード名に使う番号 ###
# 通常利用では変更しないでください．
# 通常はSTLデザイナー2が出力するSTLのネットリストのノード番号と被らない番号を利用し，
# どうしても変更の必要がある場合はここの設定を変更してください．
# line_offset: => 伝送線ごとのオフセット
# sub_offset: => サブスペースごとのオフセット
line_offset: 100
sub_offset: 1000

### デバッグ用のログを出力するかどうか ###
# stldesigner2.log を出力するかどうかを設定します．
debuglog: true

### ログファイルのローテーション世代数 ###
# 指定した世代数毎に新しいファイルを生成し，ログ出力を切り替えます．
lotation_step: 10

### ネットリストの拡張子 ###
# 利用するネットリストの拡張子を設定します．
# HSPICE なら ".sp", tlsim なら ".spc" を指定します．
netlist_ext: .sp

### 波形リストファイルの拡張子 ###
# HSPICE なら ".lis", tlsim なら ".sim" を指定します．
wave_ext: .lis

### 回路シミュレータが出力するファイルの拡張子 ###
# 回路シミュレータが出力するすべての拡張子を指定してください．
# ファイルの移動など，フォルダ内を検索するときに使用します．
# デフォルトでは HSPICE の出力ファイル拡張子を指定してあります．
spice_exts:
- .sp
- .lis
- .st0
- .tr0
- .ic0

### 不要ファイルの拡張子 ###
# spice_exts で指定した拡張子のうち，残しておく必要のない拡張子を指定します．
# STLデザイナー2 が削除します．
spice_exts_nouse:
- .st0
- .tr0
- .ic0

### スコアの正規化を行うかどうか ###
# 最適化率，スコア比等とも呼ばれています．
score_normalize: false

### アイパターン設計の設定ファイルのパス ###
# 別ファイルに分けてあるので，そのパスを実行ディレクトリからの相対パスで記述してください．
eye_config_path: ''

### EMI設計の設定ファイルのパス ###
# 別ファイルに分けてあるので，そのパスを実行ディレクトリからの相対パスで記述してください．
emi_config_path: ''

### スコア計算関数 ###
# 観測点毎に評価関数を指定します．
# optpts で指定した観測点には必ず評価関数を割り当てる必要があります．
# 評価関数の選択肢は以下の通り．
# - integral => 誤差面積
# - maxvoltage => 絶対値最大電圧
# - multi => 複合評価関数
# - eye_diff => アイパターン整形のアイマスク内プロット数（重複あり）
# - eye_constant_diff => アイパターン整形のアイマスク内プロット数（重複無し）
# - eye_dif_area => アイパターン整形のアイマスク誤差面積
# - eye_parameters => アイパターン整形のアイ開口評価
#
# EMIの評価関数については，別途EMI用の設定ファイルで指定します．
score_calc_methods:
- - optpt1
  - integral
- - optpt2
  - integral

### 古いアルゴリズム利用モード ###
# 開発途中で変更した，古いアルゴリズムを利用します．
# 変更されるのは，セグメント長の初期個体生成部です．
# （使うメソッドを get_random_segment_length から get_random_segment_length_obsolete に変更します．）
use_obsolete: false
